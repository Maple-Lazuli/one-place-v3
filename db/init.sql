
CREATE TABLE users (
    UserID SERIAL PRIMARY KEY,
    name VARCHAR(25) UNIQUE NOT NULL,
    hash VARCHAR(128) NOT NULL,
    salt BYTEA NOT NULL,
    lastFailedLogin TIMESTAMP,
    timeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    preferences TEXT
);

CREATE TABLE images (
    ImageID SERIAL PRIMARY KEY,
    UserID INTEGER NOT NULL,
    content BYTEA NOT NULL,
    timeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES users(UserID) ON DELETE CASCADE
);


CREATE TABLE projects (
    ProjectID SERIAL PRIMARY KEY,
    UserID INTEGER NOT NULL,
    name VARCHAR(64) NOT NULL,
    description VARCHAR(255) NOT NULL,
    timeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    lastUpdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES users(UserID) ON DELETE CASCADE
);

CREATE TABLE sessions (
    SessionID SERIAL PRIMARY KEY,
    UserID INTEGER NOT NULL,
    startTime TIMESTAMP NOT NULL,
    endTime TIMESTAMP NOT NULL,
    token VARCHAR(255) UNIQUE NOT NULL,
    ipAddress INET NOT NULL,
    isActive BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (UserID) REFERENCES users(UserID) ON DELETE CASCADE
);

CREATE TABLE events (
    EventID SERIAL PRIMARY KEY,
    ProjectID INTEGER NOT NULL,
    name VARCHAR (64) NOT NULL,
    description VARCHAR(255) NOT NULL,
    timeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    eventTime TIMESTAMP NOT NULL,
    duration FLOAT8 DEFAULT 0.0, -- seconds
    lastUpdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ProjectID) REFERENCES projects(ProjectID) ON DELETE CASCADE
);

CREATE TABLE todo (
    TodoID SERIAL PRIMARY KEY,
    ProjectID INTEGER NOT NULL,
    name VARCHAR (64) NOT NULL,
    description VARCHAR(255) NOT NULL,
    timeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    dueTime TIMESTAMP,
    completed BOOLEAN DEFAULT FALSE,
    timeCompleted TIMESTAMP,
    recurring BOOLEAN DEFAULT FALSE,
    recurrenceInterval FLOAT8 DEFAULT 0, -- in days
    lastUpdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ProjectID) REFERENCES projects(ProjectID) ON DELETE CASCADE
);

CREATE TABLE tags (
    TagID SERIAL PRIMARY KEY,
    UserID INTEGER NOT NULL,
    tag VARCHAR (64) NOT NULL,
    options TEXT,
    FOREIGN KEY (UserID) REFERENCES users(UserID) ON DELETE CASCADE
);

CREATE TABLE tagmappings (
    MappingID SERIAL PRIMARY KEY,
    ProjectID INTEGER NOT NULL,
    TagID INTEGER NOT NULL,
    FOREIGN KEY (ProjectID) REFERENCES projects(ProjectID) ON DELETE CASCADE,
    FOREIGN KEY (TagID) REFERENCES tags(TagID) ON DELETE CASCADE
);


CREATE TABLE projectRequests (
    ProjectRequestID SERIAL PRIMARY KEY,
    ProjectID INTEGER NOT NULL,
    SessionID INTEGER NOT NULL,
    accessTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    accessGranted BOOLEAN DEFAULT FALSE,
    notes TEXT,
    FOREIGN KEY (ProjectID) REFERENCES projects(ProjectID) ON DELETE CASCADE,
    FOREIGN KEY (SessionID) REFERENCES sessions(SessionID) ON DELETE CASCADE
);


CREATE TABLE pages (
    PageID SERIAL PRIMARY KEY,
    ProjectID INTEGER NOT NULL,
    name VARCHAR (64) NOT NULL,
    content TEXT NOT NULL,
    timeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    lastEditTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    timeInvestment FLOAT8 DEFAULT 0.0, -- seconds
    FOREIGN KEY (ProjectID) REFERENCES projects(ProjectID) ON DELETE CASCADE
);

CREATE TABLE pageRequests (
    PageRequestID SERIAL PRIMARY KEY,
    PageID INTEGER NOT NULL,
    SessionID INTEGER NOT NULL,
    accessTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    accessGranted BOOLEAN DEFAULT FALSE,
    notes TEXT,
    FOREIGN KEY (PageID) REFERENCES pages(PageID) ON DELETE CASCADE,
    FOREIGN KEY (SessionID) REFERENCES sessions(SessionID) ON DELETE CASCADE
);

CREATE TABLE equations (
    EquationID SERIAL PRIMARY KEY,
    PageID INTEGER NOT NULL,
    name VARCHAR (64) NOT NULL,
    description VARCHAR (255) NOT NULL,
    content TEXT NOT NULL,
    timeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    lastEditTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PageID) REFERENCES pages(PageID) ON DELETE CASCADE
);

CREATE TABLE recipes (
    RecipeID SERIAL PRIMARY KEY,
    PageID INTEGER NOT NULL,
    name VARCHAR (64) NOT NULL,
    description VARCHAR (255) NOT NULL,
    content TEXT NOT NULL,
    timeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    lastEditTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PageID) REFERENCES pages(PageID) ON DELETE CASCADE
);

CREATE TABLE codesnippets (
    CodeID SERIAL PRIMARY KEY,
    PageID INTEGER NOT NULL,
    name VARCHAR (64) NOT NULL,
    description VARCHAR (255) NOT NULL,
    language VARCHAR (64) NOT NULL,
    content TEXT NOT NULL,
    timeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    lastEditTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PageID) REFERENCES pages(PageID) ON DELETE CASCADE
);

CREATE TABLE translations (
    TranslationID SERIAL PRIMARY KEY,
    PageID INTEGER NOT NULL,
    language VARCHAR (64) NOT NULL,
    content TEXT,
    timeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    lastEditTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PageID) REFERENCES pages(PageID) ON DELETE CASCADE
);

CREATE TABLE files (
    FileID SERIAL PRIMARY KEY,
    PageID INTEGER NOT NULL,
    name VARCHAR (64) NOT NULL,
    hash VARCHAR (128) NOT NULL,
    filename VARCHAR (128) NOT NULL,
    description VARCHAR (255) NOT NULL,
    timeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    content BYTEA NOT NULL,
    FOREIGN KEY (PageID) REFERENCES pages(PageID) ON DELETE CASCADE
);

CREATE TABLE canvas (
    CanvasID SERIAL PRIMARY KEY,
    PageID INTEGER NOT NULL,
    name VARCHAR (64) NOT NULL,
    description VARCHAR (255) NOT NULL,
    content TEXT,
    timeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    lastEditTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PageID) REFERENCES pages(PageID) ON DELETE CASCADE
);

CREATE TABLE equationsrequests (
    RequestID SERIAL PRIMARY KEY,
    EquationID INTEGER NOT NULL,
    accessTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    accessGranted BOOLEAN DEFAULT FALSE,
    notes TEXT,
    FOREIGN KEY (EquationID) REFERENCES equations(EquationID) ON DELETE CASCADE
);

CREATE TABLE reciperequests (
    RequestID SERIAL PRIMARY KEY,
    RecipeID INTEGER NOT NULL,
    accessTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    accessGranted BOOLEAN DEFAULT FALSE,
    notes TEXT,
    FOREIGN KEY (RecipeID) REFERENCES recipes(RecipeID) ON DELETE CASCADE
);

CREATE TABLE codesnippetsrequests (
    RequestID SERIAL PRIMARY KEY,
    CodeID INTEGER NOT NULL,
    accessTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    accessGranted BOOLEAN DEFAULT FALSE,
    notes TEXT,
    FOREIGN KEY (CodeID) REFERENCES codesnippets(CodeID) ON DELETE CASCADE
);

CREATE TABLE translationrequests (
    RequestID SERIAL PRIMARY KEY,
    TranslationID INTEGER NOT NULL,
    accessTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    accessGranted BOOLEAN DEFAULT FALSE,
    notes TEXT,
    FOREIGN KEY (TranslationID) REFERENCES translations(TranslationID) ON DELETE CASCADE
);

CREATE TABLE canvasrequests (
    RequestID SERIAL PRIMARY KEY,
    CanvasID INTEGER NOT NULL,
    accessTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    accessGranted BOOLEAN DEFAULT FALSE,
    notes TEXT,
    FOREIGN KEY (CanvasID) REFERENCES canvas(CanvasID) ON DELETE CASCADE
);